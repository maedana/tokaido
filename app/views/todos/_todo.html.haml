:ruby
  default_elapsed_time_value = DailyElapsedTime.find_by(uuid: todo.tags[:id], target_date: Date.current)&.elapsed_seconds || 0
  todo_data = {
    controller: 'time-manager',
    'time-manager-elapsed-time-value': 0,
    action: 'focus->time-manager#startCountTime blur->time-manager#stopCountTime',
    'todos-target': 'todo',
    'is-first-in-list': "#{todo_counter == 0}",
    'todo-id': todo.tags[:id],
  }
%li.bg-gray-800.border-b.border-b-gray-500.border-r-0.border-r-gray-500.border-l-4.focus:bg-gray-600.focus:outline-none.p-3{ tabindex: '-1', class: todo.overdue? ? 'border-l-red-700' : 'border-l-green-700', data: todo_data }
  -# MEMO: キーボード操作でrequestSubmitさせるためのフォームなので中身は空でいい。何かないとだめなのでspanをおいてる
  = form_with url: edit_todo_path(todo.tags[:id]), method: :get, class: 'js-todo-edit-form' do
    %span
  = form_with model: DailyElapsedTime.new, url: save_elapsed_time_todo_path(todo.tags[:id]), data: { 'time-manager-target': 'saveForm' } do |form|
    = form.hidden_field :todo, value: todo.text
    - # N+1だけど一旦直接読み込み
    = form.hidden_field :elapsed_seconds, value: default_elapsed_time_value, data: { 'time-manager-target': 'elapsedTimeField' }
    %span
  .flex.items-center.space-x-4
    .flex-1.min-w-0
      %p.text-xs.text-gray-400.break-all
        %span
          = todo.projects.join(' ')
        %span
          = todo.contexts.join(' ')
      %p.text-sm.text-white.break-all
        - if todo.priority
          %span
            (#{todo.priority})
        %span
          = Rinku.auto_link(todo.text, :urls, 'target="_blank"') { |_url| '[URL]' }.html_safe
      .flex.justify-between.text-xs.text-gray-400
        %p
          = todo.due_on&.to_s || '期限なし'
        %p{ data: { 'time-manager-target': 'elapsedTime' } }
